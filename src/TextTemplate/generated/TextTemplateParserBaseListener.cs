//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from TextTemplateParser.G4 by ANTLR 4.9

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITextTemplateParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class TextTemplateParserBaseListener : ITextTemplateParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] TextTemplateParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] TextTemplateParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.subtemplateSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtemplateSection([NotNull] TextTemplateParser.SubtemplateSectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.subtemplateSection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtemplateSection([NotNull] TextTemplateParser.SubtemplateSectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.subtemplateSpecs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtemplateSpecs([NotNull] TextTemplateParser.SubtemplateSpecsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.subtemplateSpecs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtemplateSpecs([NotNull] TextTemplateParser.SubtemplateSpecsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.subtemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtemplateSpec([NotNull] TextTemplateParser.SubtemplateSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.subtemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtemplateSpec([NotNull] TextTemplateParser.SubtemplateSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.templateContents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateContents([NotNull] TextTemplateParser.TemplateContentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.templateContents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateContents([NotNull] TextTemplateParser.TemplateContentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.bullet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBullet([NotNull] TextTemplateParser.BulletContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.bullet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBullet([NotNull] TextTemplateParser.BulletContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.beginningBullet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBeginningBullet([NotNull] TextTemplateParser.BeginningBulletContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.beginningBullet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBeginningBullet([NotNull] TextTemplateParser.BeginningBulletContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] TextTemplateParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] TextTemplateParser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinuation([NotNull] TextTemplateParser.ContinuationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinuation([NotNull] TextTemplateParser.ContinuationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.templateToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateToken([NotNull] TextTemplateParser.TemplateTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.templateToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateToken([NotNull] TextTemplateParser.TemplateTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>braceArrow</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBraceArrow([NotNull] TextTemplateParser.BraceArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>braceArrow</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBraceArrow([NotNull] TextTemplateParser.BraceArrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>braceThinArrow</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBraceThinArrow([NotNull] TextTemplateParser.BraceThinArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>braceThinArrow</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBraceThinArrow([NotNull] TextTemplateParser.BraceThinArrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>braced</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBraced([NotNull] TextTemplateParser.BracedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>braced</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBraced([NotNull] TextTemplateParser.BracedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bracedPredicate</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracedPredicate([NotNull] TextTemplateParser.BracedPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bracedPredicate</c>
	/// labeled alternative in <see cref="TextTemplateParser.bracedOptions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracedPredicate([NotNull] TextTemplateParser.BracedPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.methodInvoked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodInvoked([NotNull] TextTemplateParser.MethodInvokedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.methodInvoked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodInvoked([NotNull] TextTemplateParser.MethodInvokedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>condition</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] TextTemplateParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>condition</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] TextTemplateParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>relationalOperation</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalOperation([NotNull] TextTemplateParser.RelationalOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalOperation</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalOperation([NotNull] TextTemplateParser.RelationalOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>logicalOperator</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOperator([NotNull] TextTemplateParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalOperator</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOperator([NotNull] TextTemplateParser.LogicalOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nestedPredicate</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNestedPredicate([NotNull] TextTemplateParser.NestedPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nestedPredicate</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNestedPredicate([NotNull] TextTemplateParser.NestedPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notPredicate</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotPredicate([NotNull] TextTemplateParser.NotPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notPredicate</c>
	/// labeled alternative in <see cref="TextTemplateParser.predicateExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotPredicate([NotNull] TextTemplateParser.NotPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.relationalOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalOperand([NotNull] TextTemplateParser.RelationalOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.relationalOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalOperand([NotNull] TextTemplateParser.RelationalOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.digits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigits([NotNull] TextTemplateParser.DigitsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.digits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigits([NotNull] TextTemplateParser.DigitsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.quoteOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuoteOperand([NotNull] TextTemplateParser.QuoteOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.quoteOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuoteOperand([NotNull] TextTemplateParser.QuoteOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.apostropheOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterApostropheOperand([NotNull] TextTemplateParser.ApostropheOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.apostropheOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitApostropheOperand([NotNull] TextTemplateParser.ApostropheOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.identifierOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierOperand([NotNull] TextTemplateParser.IdentifierOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.identifierOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierOperand([NotNull] TextTemplateParser.IdentifierOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.identifierCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierCondition([NotNull] TextTemplateParser.IdentifierConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.identifierCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierCondition([NotNull] TextTemplateParser.IdentifierConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.templateContextCommaToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateContextCommaToken([NotNull] TextTemplateParser.TemplateContextCommaTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.templateContextCommaToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateContextCommaToken([NotNull] TextTemplateParser.TemplateContextCommaTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.templateContextToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateContextToken([NotNull] TextTemplateParser.TemplateContextTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.templateContextToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateContextToken([NotNull] TextTemplateParser.TemplateContextTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.contextToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContextToken([NotNull] TextTemplateParser.ContextTokenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.contextToken"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContextToken([NotNull] TextTemplateParser.ContextTokenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.templateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemplateSpec([NotNull] TextTemplateParser.TemplateSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.templateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemplateSpec([NotNull] TextTemplateParser.TemplateSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.bracketedTemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracketedTemplateSpec([NotNull] TextTemplateParser.BracketedTemplateSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.bracketedTemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracketedTemplateSpec([NotNull] TextTemplateParser.BracketedTemplateSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.invokedTemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvokedTemplateSpec([NotNull] TextTemplateParser.InvokedTemplateSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.invokedTemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvokedTemplateSpec([NotNull] TextTemplateParser.InvokedTemplateSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.bracedArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracedArrow([NotNull] TextTemplateParser.BracedArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.bracedArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracedArrow([NotNull] TextTemplateParser.BracedArrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.bracedThinArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracedThinArrow([NotNull] TextTemplateParser.BracedThinArrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.bracedThinArrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracedThinArrow([NotNull] TextTemplateParser.BracedThinArrowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.bracedArrowTemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracedArrowTemplateSpec([NotNull] TextTemplateParser.BracedArrowTemplateSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.bracedArrowTemplateSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracedArrowTemplateSpec([NotNull] TextTemplateParser.BracedArrowTemplateSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>quoteLiteral</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuoteLiteral([NotNull] TextTemplateParser.QuoteLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>quoteLiteral</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuoteLiteral([NotNull] TextTemplateParser.QuoteLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>apostropheLiteral</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterApostropheLiteral([NotNull] TextTemplateParser.ApostropheLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>apostropheLiteral</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitApostropheLiteral([NotNull] TextTemplateParser.ApostropheLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>methodableTemplateSpec</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodableTemplateSpec([NotNull] TextTemplateParser.MethodableTemplateSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>methodableTemplateSpec</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodableTemplateSpec([NotNull] TextTemplateParser.MethodableTemplateSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifier</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] TextTemplateParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifier</c>
	/// labeled alternative in <see cref="TextTemplateParser.methodable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] TextTemplateParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.methodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodInvocation([NotNull] TextTemplateParser.MethodInvocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.methodInvocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodInvocation([NotNull] TextTemplateParser.MethodInvocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod([NotNull] TextTemplateParser.MethodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod([NotNull] TextTemplateParser.MethodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] TextTemplateParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] TextTemplateParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.optionallyInvoked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionallyInvoked([NotNull] TextTemplateParser.OptionallyInvokedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.optionallyInvoked"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionallyInvoked([NotNull] TextTemplateParser.OptionallyInvokedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>regex</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegex([NotNull] TextTemplateParser.RegexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>regex</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegex([NotNull] TextTemplateParser.RegexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>optionallyInvokedArgument</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionallyInvokedArgument([NotNull] TextTemplateParser.OptionallyInvokedArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>optionallyInvokedArgument</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionallyInvokedArgument([NotNull] TextTemplateParser.OptionallyInvokedArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>predicateArgument</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateArgument([NotNull] TextTemplateParser.PredicateArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>predicateArgument</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateArgument([NotNull] TextTemplateParser.PredicateArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>digitsArgument</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigitsArgument([NotNull] TextTemplateParser.DigitsArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>digitsArgument</c>
	/// labeled alternative in <see cref="TextTemplateParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigitsArgument([NotNull] TextTemplateParser.DigitsArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TextTemplateParser.namedSubtemplate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedSubtemplate([NotNull] TextTemplateParser.NamedSubtemplateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TextTemplateParser.namedSubtemplate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedSubtemplate([NotNull] TextTemplateParser.NamedSubtemplateContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
